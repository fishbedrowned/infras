repositories {
    mavenCentral()
}

jar {
    baseName = 'infras_api'
    version = baseVersion
    archiveName = 'infras_admin.jar'
}

/**
 * Node插件
 */
//apply plugin: 'com.moowork.node'
//
//node {
//    // Version of node to use.
//    version = '6.11.1'
//
//    // Version of npm to use.
//    npmVersion = '4.5.0'
//
//    // Version of Yarn to use.
//    yarnVersion = '0.27.5'
//
//    // Base URL for fetching node distributions (change if you have a mirror).
//    distBaseUrl = 'https://nodejs.org/dist'
//
//    // If true, it will download node using above parameters.
//    // If false, it will try to use globally installed node.
//    download = true
//
//    // Set the work directory for unpacking node
//    workDir = file("${project.buildDir}/nodejs")
//
//    // Set the work directory for NPM
//    npmWorkDir = file("${project.buildDir}/npm")
//
//    // Set the work directory for Yarn
//    yarnWorkDir = file("${project.buildDir}/yarn")
//
//    // Set the work directory where node_modules should be located
//    nodeModulesDir = file("$projectDir/src/main/vue")
//}

//task vueInstall(type: YarnTask) {
//    workingDir = file("$projectDir/src/main/vue")
//    args = ['install', '--force']
//}

//task vueDev(type: NpmTask) {
//    workingDir = file("$projectDir/src/main/vue")
//    args = ['run', 'dev']
//}
//
//task vueBuild(type: NpmTask) {
//    workingDir = file("$projectDir/src/main/vue")
//    args = ['run', 'build']
//}

task vueDist << {
    // distribute generated static resource files
    copy {
        from "$projectDir/src/main/vue/dist/index.html"
        into "$projectDir/src/main/resources/templates"
        rename { fileName -> fileName.replace('html', 'ftl') }
    }
    copy {
        from "$projectDir/src/main/vue/dist"
        into "$projectDir/src/main/resources/static"
        exclude { fileDetails -> fileDetails.file.name == 'index.html' }
    }
}

//vueDev.dependsOn vueInstall
//vueBuild.dependsOn vueInstall
//vueDist.dependsOn vueBuild
processResources.dependsOn vueDist

dependencies {
    compile project(':services')
//    compile('com.fasterxml.jackson.datatype:jackson-datatype-jsr310')
//    compile('com.fasterxml.jackson.datatype:jackson-datatype-jdk8')
    compile('org.springframework.boot:spring-boot-starter-freemarker')
    compile('org.springframework.boot:spring-boot-starter-web')
}
